worker_processes  3;

events {
    worker_connections  1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 50M;                                           #default body_size = 1M
    sendfile        on;
    gzip  on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    upstream nifi_backend {
       # server localhost:100;
        server host.docker.internal:100;
       # server host.docker.internal:200;
       # server localhost:300 down;
    }

    upstream efm_heartbeat {
        server host.docker.internal:10090;
    }

    upstream efm_acknowledge {
        server host.docker.internal:10090;
    }

    server {
        listen 80;

      #  access_log  logs/host.access.log  main;

      #  error_log   logs/error.log info;

         location /files {
            proxy_pass http://nifi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
         }

         location /heartbeat{
            proxy_pass http://efm_heartbeat/efm/api/c2-protocol/heartbeat;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
         }

        location /acknowledge{
            proxy_pass http://efm_acknowledge/efm/api/c2-protocol/acknowledge;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
         return 200 "OK";
        }
    }
}
